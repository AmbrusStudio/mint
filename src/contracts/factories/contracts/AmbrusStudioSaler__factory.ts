import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BigNumberish, Overrides } from 'ethers'
import { Contract, ContractFactory, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type {
  AmbrusStudioSaler,
  AmbrusStudioSalerInterface
} from '../../contracts/AmbrusStudioSaler'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_nft',
        type: 'address'
      },
      {
        internalType: 'uint16',
        name: '_count',
        type: 'uint16'
      },
      {
        internalType: 'uint256',
        name: 'startId',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32'
      }
    ],
    name: 'RoleAdminChanged',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleGranted',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleRevoked',
    type: 'event'
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'WITHDRAWER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'basePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'count',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSale',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSaleConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      },
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      },
      {
        internalType: 'uint16',
        name: 'count',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSaleCount',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSalePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      }
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      },
      {
        internalType: 'bytes32[]',
        name: 'signature',
        type: 'bytes32[]'
      }
    ],
    name: 'isAccountAllowed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'nft',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'signature',
        type: 'bytes32[]'
      }
    ],
    name: 'permitSale',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'permitSaleConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      },
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      },
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'permitSalePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'publicSaleEnd',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'publicSaleStart',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_basePrice',
        type: 'uint256'
      }
    ],
    name: 'setBasePrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_count',
        type: 'uint16'
      }
    ],
    name: 'setFlashSaleCount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      }
    ],
    name: 'setFlashSaleDiscount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setFlashSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      }
    ],
    name: 'setPermitSaleDiscount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    name: 'setPermitSaleMerkleRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setPermitSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setPublicSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      }
    ],
    name: 'setWhitelistSaleDiscount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    name: 'setWhitelistSaleMerkleRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setWhitelistSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'soldCount',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4'
      }
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'signature',
        type: 'bytes32[]'
      }
    ],
    name: 'whitelistSale',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'whitelistSaleConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      },
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      },
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'whitelistSalePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    stateMutability: 'payable',
    type: 'receive'
  }
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001d9538038062001d95833981016040819052620000349162000119565b6001805461ffff8416600160a01b026001600160b01b03199091166001600160a01b0386161717905560098190556200006f60003362000078565b50505062000172565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000115576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000d43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000806000606084860312156200012f57600080fd5b83516001600160a01b03811681146200014757600080fd5b602085015190935061ffff811681146200016057600080fd5b80925050604084015190509250925092565b611c1380620001826000396000f3fe60806040526004361061026e5760003560e01c806391d1485411610153578063c1173250116100cb578063d547741f1161007f578063ec9b5cb211610064578063ec9b5cb2146107af578063f29ff180146107d4578063fd481a25146107f457600080fd5b8063d547741f1461076f578063de4b32621461078f57600080fd5b8063d3f7084c116100b0578063d3f7084c146106be578063d40c81c6146106d3578063d452e0301461074f57600080fd5b8063c117325014610693578063c7876ea4146106a857600080fd5b8063ab050bec11610122578063b09f80f311610107578063b09f80f314610633578063ba0987b714610646578063bba0ed571461065957600080fd5b8063ab050bec146105f3578063ac43f5141461061357600080fd5b806391d14854146105655780639ddf0794146105a9578063a217fddf146105be578063a5a0adc6146105d357600080fd5b806336568abe116101e65780634c4f8480116101b5578063656cf9181161019a578063656cf918146104a75780636bbf7b5f1461051157806385f438c11461053157600080fd5b80634c4f8480146104665780635797db751461048757600080fd5b806336568abe146103de57806339f9c82c146103fe5780633ccfd60b1461041957806347ccca021461042e57600080fd5b8063248a9ca31161023d578063303a06dc11610222578063303a06dc1461036c5780633360caa01461038c57806335077edf146103be57600080fd5b8063248a9ca31461030e5780632f2ff15d1461034c57600080fd5b806301ffc9a71461027a57806306661abd146102af578063138b2b56146102e457806320ad58251461030657600080fd5b3661027557005b600080fd5b34801561028657600080fd5b5061029a610295366004611880565b610814565b60405190151581526020015b60405180910390f35b3480156102bb57600080fd5b506001546102d190600160a01b900461ffff1681565b60405161ffff90911681526020016102a6565b3480156102f057600080fd5b506103046102ff3660046118c2565b6108ad565b005b6103046108e7565b34801561031a57600080fd5b5061033e61032936600461183b565b60009081526020819052604090206001015490565b6040519081526020016102a6565b34801561035857600080fd5b50610304610367366004611854565b610ad3565b34801561037857600080fd5b506103046103873660046118e6565b610afd565b34801561039857600080fd5b506008546103a99063ffffffff1681565b60405163ffffffff90911681526020016102a6565b3480156103ca57600080fd5b506103046103d93660046118e6565b610b39565b3480156103ea57600080fd5b506103046103f9366004611854565b610b75565b34801561040a57600080fd5b50600a546102d19061ffff1681565b34801561042557600080fd5b50610304610c01565b34801561043a57600080fd5b5060015461044e906001600160a01b031681565b6040516001600160a01b0390911681526020016102a6565b34801561047257600080fd5b50600a546102d19062010000900461ffff1681565b34801561049357600080fd5b506103046104a236600461183b565b610c57565b3480156104b357600080fd5b506005546006546104e19163ffffffff80821692640100000000830490911691600160401b900460ff169084565b6040805163ffffffff958616815294909316602085015260ff9091169183019190915260608201526080016102a6565b34801561051d57600080fd5b5061030461052c36600461183b565b610c68565b34801561053d57600080fd5b5061033e7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b34801561057157600080fd5b5061029a610580366004611854565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b3480156105b557600080fd5b5061033e610c79565b3480156105ca57600080fd5b5061033e600081565b3480156105df57600080fd5b506103046105ee3660046118e6565b610cb5565b3480156105ff57600080fd5b5061030461060e366004611910565b610cf1565b34801561061f57600080fd5b5061029a61062e36600461179f565b610d22565b6103046106413660046117f9565b610daf565b6103046106543660046117f9565b610df8565b34801561066557600080fd5b506003546004546104e19163ffffffff80821692640100000000830490911691600160401b900460ff169084565b34801561069f57600080fd5b5061033e610e41565b3480156106b457600080fd5b5061033e60025481565b3480156106ca57600080fd5b5061033e610e61565b3480156106df57600080fd5b5060075461071b9063ffffffff80821691640100000000810490911690600160401b810460ff16906901000000000000000000900461ffff1684565b6040805163ffffffff958616815294909316602085015260ff9091169183019190915261ffff1660608201526080016102a6565b34801561075b57600080fd5b5061030461076a3660046118e6565b610e81565b34801561077b57600080fd5b5061030461078a366004611854565b610ebd565b34801561079b57600080fd5b506103046107aa36600461183b565b610ee2565b3480156107bb57600080fd5b506008546103a990640100000000900463ffffffff1681565b3480156107e057600080fd5b506103046107ef366004611910565b610ef3565b34801561080057600080fd5b5061030461080f366004611910565b610f24565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b0000000000000000000000000000000000000000000000000000000014806108a757507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b60006108b881610f55565b506007805461ffff9092166901000000000000000000026affff00000000000000000019909216919091179055565b60075463ffffffff164210156109445760405162461bcd60e51b815260206004820152601460248201527f466c6173682073616c65206e6f7420737461727400000000000000000000000060448201526064015b60405180910390fd5b600754640100000000900463ffffffff1642106109a35760405162461bcd60e51b815260206004820152601460248201527f466c6173682073616c652068617320656e646564000000000000000000000000604482015260640161093b565b600754600a54690100000000000000000090910461ffff908116620100009092041610610a125760405162461bcd60e51b815260206004820152601460248201527f466c6173682073616c652068617320656e646564000000000000000000000000604482015260640161093b565b600754600254606491610a3091600160401b90910460ff1690611ad9565b610a3a9190611ac5565b600254610a479190611af8565b3414610a955760405162461bcd60e51b815260206004820152601d60248201527f53656e742076616c7565206e6f7420657175616c20746f207072696365000000604482015260640161093b565b600a54610aad9062010000900461ffff166001611a87565b600a60026101000a81548161ffff021916908361ffff160217905550610ad1610f62565b565b600082815260208190526040902060010154610aee81610f55565b610af8838361109c565b505050565b6000610b0881610f55565b506007805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b6000610b4481610f55565b506005805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b6001600160a01b0381163314610bf35760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c660000000000000000000000000000000000606482015260840161093b565b610bfd828261113a565b5050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4610c2b81610f55565b60405133904780156108fc02916000818181858888f19350505050158015610bfd573d6000803e3d6000fd5b6000610c6281610f55565b50600655565b6000610c7381610f55565b50600455565b600354600254600091606491610c9991600160401b900460ff1690611ad9565b610ca39190611ac5565b600254610cb09190611af8565b905090565b6000610cc081610f55565b506003805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b6000610cfc81610f55565b506003805460ff909216600160401b0268ff000000000000000019909216919091179055565b600083610d3157506000610da7565b610da4838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff1960608b901b1660208201528892506034019050604051602081830303815290604052805190602001206111b9565b90505b949350505050565b6040805160808101825260035463ffffffff80821683526401000000008204166020830152600160401b900460ff16918101919091526004546060820152610bfd9083836111cf565b6040805160808101825260055463ffffffff80821683526401000000008204166020830152600160401b900460ff16918101919091526006546060820152610bfd9083836111cf565b600554600254600091606491610c9991600160401b900460ff1690611ad9565b600754600254600091606491610c9991600160401b900460ff1690611ad9565b6000610e8c81610f55565b506008805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b600082815260208190526040902060010154610ed881610f55565b610af8838361113a565b6000610eed81610f55565b50600255565b6000610efe81610f55565b506005805460ff909216600160401b0268ff000000000000000019909216919091179055565b6000610f2f81610f55565b506007805460ff909216600160401b0268ff000000000000000019909216919091179055565b610f5f813361135f565b50565b600154600a5461ffff600160a01b9092048216911610610fc45760405162461bcd60e51b815260206004820152600860248201527f536f6c64206f7574000000000000000000000000000000000000000000000000604482015260640161093b565b600a54600954600091610fdd9161ffff90911690611aad565b600180549192506001600160a01b03909116906319ee6e3f903390611001856113dd565b604051602001611011919061195f565b6040516020818303038152906040526040518463ffffffff1660e01b815260040161103e93929190611a4c565b600060405180830381600087803b15801561105857600080fd5b505af115801561106c573d6000803e3d6000fd5b5050600a54611083925061ffff1690506001611a87565b600a805461ffff191661ffff9290921691909117905550565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610bfd576000828152602081815260408083206001600160a01b03851684529091529020805460ff191660011790556110f63390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610bfd576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b6000826111c685846114db565b14949350505050565b825163ffffffff164210156112265760405162461bcd60e51b815260206004820152600e60248201527f53616c65206e6f74207374617274000000000000000000000000000000000000604482015260640161093b565b826020015163ffffffff16421061127f5760405162461bcd60e51b815260206004820152600e60248201527f53616c652068617320656e646564000000000000000000000000000000000000604482015260640161093b565b61128f3384606001518484610d22565b6112db5760405162461bcd60e51b815260206004820152601960248201527f596f75277265206e6f7420616c6c6f77656420746f2062757900000000000000604482015260640161093b565b6064836040015160ff166002546112f29190611ad9565b6112fc9190611ac5565b6002546113099190611af8565b34146113575760405162461bcd60e51b815260206004820152601d60248201527f53656e742076616c7565206e6f7420657175616c20746f207072696365000000604482015260640161093b565b610af8610f62565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610bfd5761139b816001600160a01b03166014611528565b6113a6836020611528565b6040516020016113b79291906119cb565b60408051601f198184030181529082905262461bcd60e51b825261093b91600401611a74565b6060816114015750506040805180820190915260018152600360fc1b602082015290565b8160005b811561142b578061141581611b56565b91506114249050600a83611ac5565b9150611405565b60008167ffffffffffffffff81111561144657611446611bc7565b6040519080825280601f01601f191660200182016040528015611470576020820181803683370190505b5090505b8415610da757611485600183611af8565b9150611492600a86611b71565b61149d906030611aad565b60f81b8183815181106114b2576114b2611bb1565b60200101906001600160f81b031916908160001a9053506114d4600a86611ac5565b9450611474565b600081815b84518110156115205761150c828683815181106114ff576114ff611bb1565b60200260200101516116f4565b91508061151881611b56565b9150506114e0565b509392505050565b60606000611537836002611ad9565b611542906002611aad565b67ffffffffffffffff81111561155a5761155a611bc7565b6040519080825280601f01601f191660200182016040528015611584576020820181803683370190505b509050600360fc1b8160008151811061159f5761159f611bb1565b60200101906001600160f81b031916908160001a9053507f7800000000000000000000000000000000000000000000000000000000000000816001815181106115ea576115ea611bb1565b60200101906001600160f81b031916908160001a905350600061160e846002611ad9565b611619906001611aad565b90505b600181111561169e577f303132333435363738396162636465660000000000000000000000000000000085600f166010811061165a5761165a611bb1565b1a60f81b82828151811061167057611670611bb1565b60200101906001600160f81b031916908160001a90535060049490941c9361169781611b3f565b905061161c565b5083156116ed5760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e74604482015260640161093b565b9392505050565b60008183106117105760008281526020849052604090206116ed565b60008381526020839052604090206116ed565b80356001600160a01b038116811461173a57600080fd5b919050565b60008083601f84011261175157600080fd5b50813567ffffffffffffffff81111561176957600080fd5b6020830191508360208260051b850101111561178457600080fd5b9250929050565b803563ffffffff8116811461173a57600080fd5b600080600080606085870312156117b557600080fd5b6117be85611723565b935060208501359250604085013567ffffffffffffffff8111156117e157600080fd5b6117ed8782880161173f565b95989497509550505050565b6000806020838503121561180c57600080fd5b823567ffffffffffffffff81111561182357600080fd5b61182f8582860161173f565b90969095509350505050565b60006020828403121561184d57600080fd5b5035919050565b6000806040838503121561186757600080fd5b8235915061187760208401611723565b90509250929050565b60006020828403121561189257600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146116ed57600080fd5b6000602082840312156118d457600080fd5b813561ffff811681146116ed57600080fd5b600080604083850312156118f957600080fd5b6119028361178b565b91506118776020840161178b565b60006020828403121561192257600080fd5b813560ff811681146116ed57600080fd5b6000815180845261194b816020860160208601611b0f565b601f01601f19169290920160200192915050565b7f7b00000000000000000000000000000000000000000000000000000000000000815260008251611997816001850160208701611b0f565b7f7d3a7b7d000000000000000000000000000000000000000000000000000000006001939091019283015250600501919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611a03816017850160208801611b0f565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611a40816028840160208801611b0f565b01602801949350505050565b6001600160a01b0384168152826020820152606060408201526000610da46060830184611933565b6020815260006116ed6020830184611933565b600061ffff808316818516808303821115611aa457611aa4611b85565b01949350505050565b60008219821115611ac057611ac0611b85565b500190565b600082611ad457611ad4611b9b565b500490565b6000816000190483118215151615611af357611af3611b85565b500290565b600082821015611b0a57611b0a611b85565b500390565b60005b83811015611b2a578181015183820152602001611b12565b83811115611b39576000848401525b50505050565b600081611b4e57611b4e611b85565b506000190190565b6000600019821415611b6a57611b6a611b85565b5060010190565b600082611b8057611b80611b9b565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201c5c8cc61d91c8dae779f2222a441e4c221f1c9053db6c12f9496b2c7d10535764736f6c63430008060033'

type AmbrusStudioSalerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: AmbrusStudioSalerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class AmbrusStudioSaler__factory extends ContractFactory {
  constructor(...args: AmbrusStudioSalerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _nft: PromiseOrValue<string>,
    _count: PromiseOrValue<BigNumberish>,
    startId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AmbrusStudioSaler> {
    return super.deploy(_nft, _count, startId, overrides || {}) as Promise<AmbrusStudioSaler>
  }
  override getDeployTransaction(
    _nft: PromiseOrValue<string>,
    _count: PromiseOrValue<BigNumberish>,
    startId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nft, _count, startId, overrides || {})
  }
  override attach(address: string): AmbrusStudioSaler {
    return super.attach(address) as AmbrusStudioSaler
  }
  override connect(signer: Signer): AmbrusStudioSaler__factory {
    return super.connect(signer) as AmbrusStudioSaler__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AmbrusStudioSalerInterface {
    return new utils.Interface(_abi) as AmbrusStudioSalerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AmbrusStudioSaler {
    return new Contract(address, _abi, signerOrProvider) as AmbrusStudioSaler
  }
}
