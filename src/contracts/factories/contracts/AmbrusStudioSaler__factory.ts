import type { Provider, TransactionRequest } from '@ethersproject/providers'
import type { BigNumberish, Overrides } from 'ethers'
import { Contract, ContractFactory, Signer, utils } from 'ethers'

import type { PromiseOrValue } from '../../common'
import type {
  AmbrusStudioSaler,
  AmbrusStudioSalerInterface
} from '../../contracts/AmbrusStudioSaler'

const _abi = [
  {
    inputs: [
      {
        internalType: 'address',
        name: '_nft',
        type: 'address'
      },
      {
        internalType: 'uint16',
        name: '_count',
        type: 'uint16'
      },
      {
        internalType: 'uint256',
        name: 'startId',
        type: 'uint256'
      }
    ],
    stateMutability: 'nonpayable',
    type: 'constructor'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'previousAdminRole',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'newAdminRole',
        type: 'bytes32'
      }
    ],
    name: 'RoleAdminChanged',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleGranted',
    type: 'event'
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        indexed: true,
        internalType: 'address',
        name: 'sender',
        type: 'address'
      }
    ],
    name: 'RoleRevoked',
    type: 'event'
  },
  {
    inputs: [],
    name: 'DEFAULT_ADMIN_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'WITHDRAWER_ROLE',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'basePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'count',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSale',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSaleConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      },
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      },
      {
        internalType: 'uint16',
        name: 'count',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSaleCount',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'flashSalePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      }
    ],
    name: 'getRoleAdmin',
    outputs: [
      {
        internalType: 'bytes32',
        name: '',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'grantRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'hasRole',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      },
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      },
      {
        internalType: 'bytes32[]',
        name: 'signature',
        type: 'bytes32[]'
      }
    ],
    name: 'isAccountAllowed',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'pure',
    type: 'function'
  },
  {
    inputs: [],
    name: 'nft',
    outputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'signature',
        type: 'bytes32[]'
      }
    ],
    name: 'permitSale',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'permitSaleConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      },
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      },
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'permitSaleCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'permitSalePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'publicSaleEnd',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'publicSaleStart',
    outputs: [
      {
        internalType: 'uint32',
        name: '',
        type: 'uint32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'renounceRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'role',
        type: 'bytes32'
      },
      {
        internalType: 'address',
        name: 'account',
        type: 'address'
      }
    ],
    name: 'revokeRole',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint256',
        name: '_basePrice',
        type: 'uint256'
      }
    ],
    name: 'setBasePrice',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint16',
        name: '_count',
        type: 'uint16'
      }
    ],
    name: 'setFlashSaleCount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      }
    ],
    name: 'setFlashSaleDiscount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setFlashSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      }
    ],
    name: 'setPermitSaleDiscount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    name: 'setPermitSaleMerkleRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setPermitSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setPublicSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      }
    ],
    name: 'setWhitelistSaleDiscount',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    name: 'setWhitelistSaleMerkleRoot',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      }
    ],
    name: 'setWhitelistSaleTime',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'soldCount',
    outputs: [
      {
        internalType: 'uint16',
        name: '',
        type: 'uint16'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes4',
        name: 'interfaceId',
        type: 'bytes4'
      }
    ],
    name: 'supportsInterface',
    outputs: [
      {
        internalType: 'bool',
        name: '',
        type: 'bool'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'bytes32[]',
        name: 'signature',
        type: 'bytes32[]'
      }
    ],
    name: 'whitelistSale',
    outputs: [],
    stateMutability: 'payable',
    type: 'function'
  },
  {
    inputs: [],
    name: 'whitelistSaleConfig',
    outputs: [
      {
        internalType: 'uint32',
        name: 'start',
        type: 'uint32'
      },
      {
        internalType: 'uint32',
        name: 'end',
        type: 'uint32'
      },
      {
        internalType: 'uint8',
        name: 'discount',
        type: 'uint8'
      },
      {
        internalType: 'bytes32',
        name: 'merkleRoot',
        type: 'bytes32'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [
      {
        internalType: 'address',
        name: '',
        type: 'address'
      }
    ],
    name: 'whitelistSaleCount',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'whitelistSalePrice',
    outputs: [
      {
        internalType: 'uint256',
        name: '',
        type: 'uint256'
      }
    ],
    stateMutability: 'view',
    type: 'function'
  },
  {
    inputs: [],
    name: 'withdraw',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function'
  },
  {
    stateMutability: 'payable',
    type: 'receive'
  }
]

const _bytecode =
  '0x60806040523480156200001157600080fd5b5060405162001f4838038062001f48833981016040819052620000349162000119565b6001805461ffff8416600160a01b026001600160b01b03199091166001600160a01b0386161717905560098190556200006f60003362000078565b50505062000172565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000115576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000d43390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45b5050565b6000806000606084860312156200012f57600080fd5b83516001600160a01b03811681146200014757600080fd5b602085015190935061ffff811681146200016057600080fd5b80925050604084015190509250925092565b611dc680620001826000396000f3fe6080604052600436106102a45760003560e01c806389805bd91161016e578063c1173250116100cb578063d547741f1161007f578063ec9b5cb211610064578063ec9b5cb21461083f578063f29ff18014610864578063fd481a251461088457600080fd5b8063d547741f146107ff578063de4b32621461081f57600080fd5b8063d3f7084c116100b0578063d3f7084c1461074e578063d40c81c614610763578063d452e030146107df57600080fd5b8063c117325014610723578063c7876ea41461073857600080fd5b8063ab050bec11610122578063b09f80f311610107578063b09f80f3146106c3578063ba0987b7146106d6578063bba0ed57146106e957600080fd5b8063ab050bec14610683578063ac43f514146106a357600080fd5b80639ddf0794116101535780639ddf079414610639578063a217fddf1461064e578063a5a0adc61461066357600080fd5b806389805bd9146105c857806391d14854146105f557600080fd5b806335077edf1161021c5780634c4f8480116101d0578063656cf918116101b5578063656cf9181461050a5780636bbf7b5f1461057457806385f438c11461059457600080fd5b80634c4f8480146104c95780635797db75146104ea57600080fd5b806339f9c82c1161020157806339f9c82c146104615780633ccfd60b1461047c57806347ccca021461049157600080fd5b806335077edf1461042157806336568abe1461044157600080fd5b806320ad5825116102735780632f2ff15d116102585780632f2ff15d146103af578063303a06dc146103cf5780633360caa0146103ef57600080fd5b806320ad582514610377578063248a9ca31461037f57600080fd5b806301ffc9a7146102b057806306661abd146102e55780630749abcb1461031a578063138b2b561461035557600080fd5b366102ab57005b600080fd5b3480156102bc57600080fd5b506102d06102cb366004611a33565b6108a4565b60405190151581526020015b60405180910390f35b3480156102f157600080fd5b5060015461030790600160a01b900461ffff1681565b60405161ffff90911681526020016102dc565b34801561032657600080fd5b50610347610335366004611937565b600c6020526000908152604090205481565b6040519081526020016102dc565b34801561036157600080fd5b50610375610370366004611a75565b61093d565b005b610375610977565b34801561038b57600080fd5b5061034761039a3660046119ee565b60009081526020819052604090206001015490565b3480156103bb57600080fd5b506103756103ca366004611a07565b610b63565b3480156103db57600080fd5b506103756103ea366004611a99565b610b8d565b3480156103fb57600080fd5b5060085461040c9063ffffffff1681565b60405163ffffffff90911681526020016102dc565b34801561042d57600080fd5b5061037561043c366004611a99565b610bc9565b34801561044d57600080fd5b5061037561045c366004611a07565b610c05565b34801561046d57600080fd5b50600a546103079061ffff1681565b34801561048857600080fd5b50610375610c91565b34801561049d57600080fd5b506001546104b1906001600160a01b031681565b6040516001600160a01b0390911681526020016102dc565b3480156104d557600080fd5b50600a546103079062010000900461ffff1681565b3480156104f657600080fd5b506103756105053660046119ee565b610ce7565b34801561051657600080fd5b506005546006546105449163ffffffff80821692640100000000830490911691600160401b900460ff169084565b6040805163ffffffff958616815294909316602085015260ff9091169183019190915260608201526080016102dc565b34801561058057600080fd5b5061037561058f3660046119ee565b610cf8565b3480156105a057600080fd5b506103477f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e481565b3480156105d457600080fd5b506103476105e3366004611937565b600b6020526000908152604090205481565b34801561060157600080fd5b506102d0610610366004611a07565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561064557600080fd5b50610347610d09565b34801561065a57600080fd5b50610347600081565b34801561066f57600080fd5b5061037561067e366004611a99565b610d45565b34801561068f57600080fd5b5061037561069e366004611ac3565b610d81565b3480156106af57600080fd5b506102d06106be366004611952565b610db2565b6103756106d13660046119ac565b610e3f565b6103756106e43660046119ac565b610f0c565b3480156106f557600080fd5b506003546004546105449163ffffffff80821692640100000000830490911691600160401b900460ff169084565b34801561072f57600080fd5b50610347610fd9565b34801561074457600080fd5b5061034760025481565b34801561075a57600080fd5b50610347610ff9565b34801561076f57600080fd5b506007546107ab9063ffffffff80821691640100000000810490911690600160401b810460ff16906901000000000000000000900461ffff1684565b6040805163ffffffff958616815294909316602085015260ff9091169183019190915261ffff1660608201526080016102dc565b3480156107eb57600080fd5b506103756107fa366004611a99565b611019565b34801561080b57600080fd5b5061037561081a366004611a07565b611055565b34801561082b57600080fd5b5061037561083a3660046119ee565b61107a565b34801561084b57600080fd5b5060085461040c90640100000000900463ffffffff1681565b34801561087057600080fd5b5061037561087f366004611ac3565b61108b565b34801561089057600080fd5b5061037561089f366004611ac3565b6110bc565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f7965db0b00000000000000000000000000000000000000000000000000000000148061093757507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b6000610948816110ed565b506007805461ffff9092166901000000000000000000026affff00000000000000000019909216919091179055565b60075463ffffffff164210156109d45760405162461bcd60e51b815260206004820152601460248201527f466c6173682073616c65206e6f7420737461727400000000000000000000000060448201526064015b60405180910390fd5b600754640100000000900463ffffffff164210610a335760405162461bcd60e51b815260206004820152601460248201527f466c6173682073616c652068617320656e64656400000000000000000000000060448201526064016109cb565b600754600a54690100000000000000000090910461ffff908116620100009092041610610aa25760405162461bcd60e51b815260206004820152601460248201527f466c6173682073616c652068617320656e64656400000000000000000000000060448201526064016109cb565b600754600254606491610ac091600160401b90910460ff1690611c8c565b610aca9190611c78565b600254610ad79190611cab565b3414610b255760405162461bcd60e51b815260206004820152601d60248201527f53656e742076616c7565206e6f7420657175616c20746f20707269636500000060448201526064016109cb565b600a54610b3d9062010000900461ffff166001611c3a565b600a60026101000a81548161ffff021916908361ffff160217905550610b616110fa565b565b600082815260208190526040902060010154610b7e816110ed565b610b888383611234565b505050565b6000610b98816110ed565b506007805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b6000610bd4816110ed565b506005805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b6001600160a01b0381163314610c835760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201527f20726f6c657320666f722073656c66000000000000000000000000000000000060648201526084016109cb565b610c8d82826112d2565b5050565b7f10dac8c06a04bec0b551627dad28bc00d6516b0caacd1c7b345fcdb5211334e4610cbb816110ed565b60405133904780156108fc02916000818181858888f19350505050158015610c8d573d6000803e3d6000fd5b6000610cf2816110ed565b50600655565b6000610d03816110ed565b50600455565b600354600254600091606491610d2991600160401b900460ff1690611c8c565b610d339190611c78565b600254610d409190611cab565b905090565b6000610d50816110ed565b506003805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b6000610d8c816110ed565b506003805460ff909216600160401b0268ff000000000000000019909216919091179055565b600083610dc157506000610e37565b610e34838380806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250506040516bffffffffffffffffffffffff1960608b901b166020820152889250603401905060405160208183030381529060405280519060200120611351565b90505b949350505050565b336000908152600b6020526040902054600211610e9e5760405162461bcd60e51b815260206004820152601660248201527f45786365656473207075726368617365206c696d69740000000000000000000060448201526064016109cb565b336000908152600b60205260408120805460019290610ebe908490611c60565b90915550506040805160808101825260035463ffffffff80821683526401000000008204166020830152600160401b900460ff16918101919091526004546060820152610c8d908383611367565b336000908152600c6020526040902054600211610f6b5760405162461bcd60e51b815260206004820152601660248201527f45786365656473207075726368617365206c696d69740000000000000000000060448201526064016109cb565b336000908152600c60205260408120805460019290610f8b908490611c60565b90915550506040805160808101825260055463ffffffff80821683526401000000008204166020830152600160401b900460ff16918101919091526006546060820152610c8d908383611367565b600554600254600091606491610d2991600160401b900460ff1690611c8c565b600754600254600091606491610d2991600160401b900460ff1690611c8c565b6000611024816110ed565b506008805463ffffffff9283166401000000000267ffffffffffffffff199091169290931691909117919091179055565b600082815260208190526040902060010154611070816110ed565b610b8883836112d2565b6000611085816110ed565b50600255565b6000611096816110ed565b506005805460ff909216600160401b0268ff000000000000000019909216919091179055565b60006110c7816110ed565b506007805460ff909216600160401b0268ff000000000000000019909216919091179055565b6110f781336114f7565b50565b600154600a5461ffff600160a01b909204821691161061115c5760405162461bcd60e51b815260206004820152600860248201527f536f6c64206f757400000000000000000000000000000000000000000000000060448201526064016109cb565b600a546009546000916111759161ffff90911690611c60565b600180549192506001600160a01b03909116906319ee6e3f90339061119985611575565b6040516020016111a99190611b12565b6040516020818303038152906040526040518463ffffffff1660e01b81526004016111d693929190611bff565b600060405180830381600087803b1580156111f057600080fd5b505af1158015611204573d6000803e3d6000fd5b5050600a5461121b925061ffff1690506001611c3a565b600a805461ffff191661ffff9290921691909117905550565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610c8d576000828152602081815260408083206001600160a01b03851684529091529020805460ff1916600117905561128e3390565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1615610c8d576000828152602081815260408083206001600160a01b0385168085529252808320805460ff1916905551339285917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a45050565b60008261135e8584611673565b14949350505050565b825163ffffffff164210156113be5760405162461bcd60e51b815260206004820152600e60248201527f53616c65206e6f7420737461727400000000000000000000000000000000000060448201526064016109cb565b826020015163ffffffff1642106114175760405162461bcd60e51b815260206004820152600e60248201527f53616c652068617320656e64656400000000000000000000000000000000000060448201526064016109cb565b6114273384606001518484610db2565b6114735760405162461bcd60e51b815260206004820152601960248201527f596f75277265206e6f7420616c6c6f77656420746f206275790000000000000060448201526064016109cb565b6064836040015160ff1660025461148a9190611c8c565b6114949190611c78565b6002546114a19190611cab565b34146114ef5760405162461bcd60e51b815260206004820152601d60248201527f53656e742076616c7565206e6f7420657175616c20746f20707269636500000060448201526064016109cb565b610b886110fa565b6000828152602081815260408083206001600160a01b038516845290915290205460ff16610c8d57611533816001600160a01b031660146116c0565b61153e8360206116c0565b60405160200161154f929190611b7e565b60408051601f198184030181529082905262461bcd60e51b82526109cb91600401611c27565b6060816115995750506040805180820190915260018152600360fc1b602082015290565b8160005b81156115c357806115ad81611d09565b91506115bc9050600a83611c78565b915061159d565b60008167ffffffffffffffff8111156115de576115de611d7a565b6040519080825280601f01601f191660200182016040528015611608576020820181803683370190505b5090505b8415610e375761161d600183611cab565b915061162a600a86611d24565b611635906030611c60565b60f81b81838151811061164a5761164a611d64565b60200101906001600160f81b031916908160001a90535061166c600a86611c78565b945061160c565b600081815b84518110156116b8576116a48286838151811061169757611697611d64565b602002602001015161188c565b9150806116b081611d09565b915050611678565b509392505050565b606060006116cf836002611c8c565b6116da906002611c60565b67ffffffffffffffff8111156116f2576116f2611d7a565b6040519080825280601f01601f19166020018201604052801561171c576020820181803683370190505b509050600360fc1b8160008151811061173757611737611d64565b60200101906001600160f81b031916908160001a9053507f78000000000000000000000000000000000000000000000000000000000000008160018151811061178257611782611d64565b60200101906001600160f81b031916908160001a90535060006117a6846002611c8c565b6117b1906001611c60565b90505b6001811115611836577f303132333435363738396162636465660000000000000000000000000000000085600f16601081106117f2576117f2611d64565b1a60f81b82828151811061180857611808611d64565b60200101906001600160f81b031916908160001a90535060049490941c9361182f81611cf2565b90506117b4565b5083156118855760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016109cb565b9392505050565b60008183106118a8576000828152602084905260409020611885565b6000838152602083905260409020611885565b80356001600160a01b03811681146118d257600080fd5b919050565b60008083601f8401126118e957600080fd5b50813567ffffffffffffffff81111561190157600080fd5b6020830191508360208260051b850101111561191c57600080fd5b9250929050565b803563ffffffff811681146118d257600080fd5b60006020828403121561194957600080fd5b611885826118bb565b6000806000806060858703121561196857600080fd5b611971856118bb565b935060208501359250604085013567ffffffffffffffff81111561199457600080fd5b6119a0878288016118d7565b95989497509550505050565b600080602083850312156119bf57600080fd5b823567ffffffffffffffff8111156119d657600080fd5b6119e2858286016118d7565b90969095509350505050565b600060208284031215611a0057600080fd5b5035919050565b60008060408385031215611a1a57600080fd5b82359150611a2a602084016118bb565b90509250929050565b600060208284031215611a4557600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461188557600080fd5b600060208284031215611a8757600080fd5b813561ffff8116811461188557600080fd5b60008060408385031215611aac57600080fd5b611ab583611923565b9150611a2a60208401611923565b600060208284031215611ad557600080fd5b813560ff8116811461188557600080fd5b60008151808452611afe816020860160208601611cc2565b601f01601f19169290920160200192915050565b7f7b00000000000000000000000000000000000000000000000000000000000000815260008251611b4a816001850160208701611cc2565b7f7d3a7b7d000000000000000000000000000000000000000000000000000000006001939091019283015250600501919050565b7f416363657373436f6e74726f6c3a206163636f756e7420000000000000000000815260008351611bb6816017850160208801611cc2565b7f206973206d697373696e6720726f6c65200000000000000000000000000000006017918401918201528351611bf3816028840160208801611cc2565b01602801949350505050565b6001600160a01b0384168152826020820152606060408201526000610e346060830184611ae6565b6020815260006118856020830184611ae6565b600061ffff808316818516808303821115611c5757611c57611d38565b01949350505050565b60008219821115611c7357611c73611d38565b500190565b600082611c8757611c87611d4e565b500490565b6000816000190483118215151615611ca657611ca6611d38565b500290565b600082821015611cbd57611cbd611d38565b500390565b60005b83811015611cdd578181015183820152602001611cc5565b83811115611cec576000848401525b50505050565b600081611d0157611d01611d38565b506000190190565b6000600019821415611d1d57611d1d611d38565b5060010190565b600082611d3357611d33611d4e565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212200f827fec04cb7383ec9a5bb4759bc46879290963533050ed9c3037c9a0ef117964736f6c63430008060033'

type AmbrusStudioSalerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>

const isSuperArgs = (
  xs: AmbrusStudioSalerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1

export class AmbrusStudioSaler__factory extends ContractFactory {
  constructor(...args: AmbrusStudioSalerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args)
    } else {
      super(_abi, _bytecode, args[0])
    }
  }

  override deploy(
    _nft: PromiseOrValue<string>,
    _count: PromiseOrValue<BigNumberish>,
    startId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<AmbrusStudioSaler> {
    return super.deploy(_nft, _count, startId, overrides || {}) as Promise<AmbrusStudioSaler>
  }
  override getDeployTransaction(
    _nft: PromiseOrValue<string>,
    _count: PromiseOrValue<BigNumberish>,
    startId: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_nft, _count, startId, overrides || {})
  }
  override attach(address: string): AmbrusStudioSaler {
    return super.attach(address) as AmbrusStudioSaler
  }
  override connect(signer: Signer): AmbrusStudioSaler__factory {
    return super.connect(signer) as AmbrusStudioSaler__factory
  }

  static readonly bytecode = _bytecode
  static readonly abi = _abi
  static createInterface(): AmbrusStudioSalerInterface {
    return new utils.Interface(_abi) as AmbrusStudioSalerInterface
  }
  static connect(address: string, signerOrProvider: Signer | Provider): AmbrusStudioSaler {
    return new Contract(address, _abi, signerOrProvider) as AmbrusStudioSaler
  }
}
